benchx

This is small benchmark program to test the throughput of low-level drawing primitives in the X
server. It supports 16bpp and 32bpp.

Usage:
	benchx <testname>

where <testname> is one of the following:

	ScreenCopy			Screen to screen blits (using XCopyArea).
	AlignedScreenCopy		Aligned screen to screen blits (e.g. vertical scrolling).
	FillRect			Rectangle fill.
	PutImage			Slow PutImage using Xlib communication socket.
        ShmPutImage			Fast PutImage using MIT shared memory.
        AlignedShmPutImage		Same but destination x-coordinate is aligned to multiple of 8.
        ShmPixmapToScreenCopy		CopyArea from shared memory pixmap to screen.
        AlignedPixmapToScreenCopy	Same but destination position is aligned to multiple of 8.
	PixmapCopy			Copy pixmap to another pixmap (server-side).
	PixmapFillRect			Rectangle fill of pixmap.
	All				Run all tests.

Run benchx without arguments for the full list.

It is best run on a bare X server without a window manager, because otherwise the root window may be
obscured. To do so, create or edit the file .xinitrc in your home directory so that has the two
lines:

	xset s off
	benchx <testname> > benchx.out

The first line disables the X screensaver. You may need other measures to disable screen blanking
after a certain period. If you start the X server using startx, it will automatically run the
specified test, and the X server should exit after it is finished. A sample xinitrc file that
runs all the tests is provided.

The output includes the number of operations per second, the pixel bandwidth in
MB/s, and if available the user and system CPU usage of the X server. The X server
process name looked for is "Xorg". The CPU usage of benchx itself is not reported, but is should
be low, except for FillRect at small sizes (Xlib overhead for lots of small requests), and basic
PutImage at large sizes (moving large amounts of data through the X socket).

Running as root is helpful but not strictly necessary.

A tool to compare output results is provided (benchxcomp).

Note about PutImage performance:

The tests PutImage, [Aligned]ShmPutImage and [Aligned]PixmapCopy depend highly on CPU caches.
As the size of the image increases, it may no longer fit into the L2 cache of the CPU, that's
why bandwidth decreases for the largest sizes.
